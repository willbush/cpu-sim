.0
23
300   // close eyes left face
23    //push return address on stack and jump to address
500   //sleep routine address
23    //push return address on stack and jump to address
500   //sleep routine address
23    //push return address on stack and jump to address
450   //backspace routine
23    //push return address on stack and jump to address
450   //backspace routine
23    //push return address on stack and jump to address
450   //backspace routine
23    //push return address on stack and jump to address
450   //backspace routine
23    //push return address on stack and jump to address
450   //backspace routine
23    //push return address on stack and jump to address
450   //backspace routine
23
315   // open eyes left face
1
10    // newline char
9
2
50

.300  // left face closed routine ( -_-)
1
40    // ( char
9
2
1
32    // space char
9
2
23
330   // closed eyes face routine
1
41    // ) char
9
2
24    //pop address and return

.315  // left face open routine ( `_`)
1
40    // ( char
9
2
1
32    // space char
9
2
23
350   // closed eyes face routine
1
41    // ) char
9
2
24    //pop address and return

.330   // closed eyes face routine -_-
1
45    // - char
9
2
1
95    // _ char
9
2
1
45    // - char
9
2
24    //pop address and return

.350   // open eyes face routine o_o
1
111    // o char
9
2
1
95    // _ char
9
2
1
111    // o char
9
2
24    //pop address and return

.450  //descructive backspace routine
1
8     //load backspace
9
2     //print backspace which moves back one char
1
32    //load space
9
2     //replace current char with space
1
8
9
2     //move back again
24    //pop address and return

.500  //sleep routine
1     //load into ac
10000
14    //copy ac to x
26    //x--
15    //copy x to ac
22    //jump to address if ac != 0
503   //address of x--
24    //pop address and return

.1000 //interrupt handler routine
30    //interrupt return
